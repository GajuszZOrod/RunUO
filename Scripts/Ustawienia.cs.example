using System;
using Server;
using Server.Items;
using Server.Network;
using Server.Mobiles;
using System.Text;
using System.Threading;
using Server.Engines.CannedEvil;
using System.IO;

namespace Server
{
	public class Config
	{
		public static readonly string Address = "127.0.0.1";
		public static int ServerPorts = 2593 ;
		public static string CustomPath = @"D:\Games\Ultima Online";
		
		public static string ServerName = "Nelderim";
		
		public static bool ValidateLabeling( object o )
		{
			// Mona tutaj doda� wszystkie typy przedmiot�w lub moobiles�w kt�re nie powinny mie� labela
			if ( o is BaseVendor || o is PlayerMobile || o is Teleporter || o is Spawner || o is Static || o is ChampionSpawn )
					return false;

			return true;
		}
		
		public static bool Shard_Local = true;
		
        // Auto tworzenie kont
		public static bool AutoAccountCreation =  Shard_Local;
        // Makymalna ilo�� loguj�cych sie os�b z tego samego ip
		public static int MaxAccountsPerIP = 3;
        // Makymalna ilosc postaci logujacych sie z tego samego ip
		public static int MaxAddresses = 3;
        // Czas po jakim mo�na usunac postac
        public static TimeSpan CharDeleteDelay = TimeSpan.FromHours( 72.0 );
        // Maksymalna liczba postaci na konto
		public static int MaxCharacters = 3;
        //Po ilu dniach konto zostaje jako nieaktywne
		public static int NoActiveAccount = 90;

        // Czas zapisu
		public static TimeSpan SaveDelay = TimeSpan.FromMinutes( 20.0 );
        // Poinformowanie przed zapisem
		public static TimeSpan SaveWarningDelay = TimeSpan.FromSeconds( 60.0 );

        // Wlacza status mlodego gracza
		public static bool Young = false;
        // Przy 300.0 wszystkich skilli znika status m�odego
		public static int YoungSkills = 3000;
        // Czas M�odego gracza w godzinach
		public static readonly TimeSpan YoungDuration = TimeSpan.FromHours( 5.0 );
		public static readonly TimeSpan InactiveDuration = TimeSpan.FromDays( 180.0 );

		// Insurance
		public static bool InsuranceEnabled = true;

		// Szansa na utrate durability po trafieniu (w %)
		public static double ItemDurabilityLostChance = 8;
		public static double WeaponDurabilityLostChance = 2;
        
        // System identifikacji przedmiotow
		public static bool ItemIDSystemEnabled = false;

        // Czy tworz� si� zakrwawione banda�e podczas leczenia?
		public static bool BleedBandages = false;

        // Loguje rozmowy graczy
		public static bool LogPlayerSpeech = true;
        // Pokazuje rozmowy graczy w konsoli
		public static bool ShowPlayerSpeechOnConsole = false;
		
        // Czas po jakim znikaj� przedmioty sprzedane przez gracza
		public static TimeSpan RespawnItems = TimeSpan.FromMinutes( 30.0 );
        // Czas respawnu sprzedawanych przedmiot�w
		public static TimeSpan RespawnSellItem = TimeSpan.FromMinutes( 45.0 );
				
        // Umo�liwia zmiane hasla przez gracza
		public static bool ChangePasswordEnabled = true;
		
		// MySQL - podania - konta
		public static string
			DatabaseDriver_Acc      = "{MySQL ODBC 3.51 Driver}",
			DatabaseServer_Acc      = "anmarmb.home.pl",
			DatabaseName_Acc        = "anmarmb2",
			DatabaseUserID_Acc      = "anmarmb2",
			DatabasePassword_Acc    = "tutaj has�o";

				
		// Status w MySQL MyRunUO
        // wlacza i wylacza obs�uge shardu w mysql
		public static bool MyRunUOEnabled = ( Shard_Local ? false : false );

		public static string DatabaseDriver          = "{MySQL ODBC 3.51 Driver}";
		public static string DatabaseServer          = "anmarmb.home.pl";
		public static string DatabaseName            = "anmarmb2";
		public static string DatabaseUserID          = "anmarmb2";
		public static string DatabasePassword        = "tutaj has�o";

        // translacja bazy danych, zalecane true
		public static bool UseTransactions = true;
        // optymalizacja �adowania tabeli - wczytaj dane z plikow
		public static bool LoadDataInFile = true;
        // musi byc enabled jesli baza danych jest na zdalnej maszynie
		public static bool DatabaseNonLocal = ( DatabaseServer != "localhost" );
        // Database communication is done in a seperate thread. This value is the 'priority' of that thread, or, how much CPU it will try to use
		public static ThreadPriority DatabaseThreadPriority = ThreadPriority.BelowNormal;
        // wyb�r od jakiego poziomu dost�pu postacie b�d� widoczne w statystykach
		public static AccessLevel HiddenAccessLevel  = AccessLevel.Owner;
        // co ile czasu ma by� aktualizowany status Graczy Online na WWW do sql
		public static TimeSpan StatusUpdateInterval = TimeSpan.FromMinutes( 5.0 );
        // co ile czasu ma by� aktualizowany status Wszystkich Graczy do sql
		public static TimeSpan CharacterUpdateInterval = TimeSpan.FromMinutes( 60.0 );

		public static string CompileConnectionString()
		{
				string connectionString = String.Format( "DRIVER={0};SERVER={1};DATABASE={2};UID={3};PASSWORD={4};",
						DatabaseDriver, DatabaseServer, DatabaseName, DatabaseUserID, DatabasePassword );
				return connectionString;
		}
	}
}